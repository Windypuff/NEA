@using NEA.Controllers
@model QuestionDTO
@using Highsoft.Web.Mvc.Charts
@using Highsoft.Web.Mvc.Charts.Rendering

@{
    ViewData["Title"] = "Quiz";
    List<QuestionModel> questions = null;
    List<HighchartsRenderer> renders = null;
    string PreviousAnswerCorrect = null;
    if (Model != null){
        questions = Model.Questions;
        renders = Model.renders;
        if (Model.PreviousAnswerCorrect != null){
            PreviousAnswerCorrect = Model.PreviousAnswerCorrect;
        }
    }
    Random R = new Random();
    int i = R.Next(0,questions.Count); 
}

<script src="https://code.highcharts.com/modules/exporting.js"></script> 
<script src="https://code.highcharts.com/highcharts.js"></script>

<!DOCTYPE html>
<html>
<style>
/* The container */
.quiz-answers {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}
/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 6px;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}
/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}
/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196F3;
}
/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}
/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}
/* Style the indicator (dot/circle) */
.container .checkmark:after {
 	top: 8.5px;
	left: 8.5px;
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background: white;
}
.card-graph{
  box-shadow: 0 .25rem 0.6rem rgba(0,0,0,.15)!important;
}
.card-graph.card:hover{
  box-shadow: 0 .4rem 1rem rgba(0,0,0,.15)!important;
}
h1{
  text-align: center;
}
h2{
  text-align: center;
  }

body{
  text-align: right;
}
</style>



 <body> 


    @if (PreviousAnswerCorrect == "y"){
    <h1 style="color:green;">Correct</h1>
  }
  @if (PreviousAnswerCorrect == "n"){
    <h1 style="color:red;">Incorrect</h1>
  }

<div class="container-fluid">
  <div class = "row" style="align-items: center;" >
    <div class = "col-md-12 col-sm-12">

    <h2>y = @questions[i].equation</h2> 
    
    <form method="POST">
      <input type = "hidden" name = "equation" value = @questions[i].equation />
      <input type = "hidden" name = "difficulty" value = @questions[i].difficultyLevel />
      <div class = "row">
        

      
      @foreach (var question in questions) 
        {
          <div class = "col col-md-6">
            <label class="quiz-answers">
              
              <input type="radio" name="answer" value="@question.solutionsConcatenated">
              <span class="checkmark"></span>
              <div class="">

                <div class="card card-graph">

                    <div class="card-body">

                        @Html.Raw(question.render.RenderHtml())

                    </div>

                </div>

            </div>
          </label> 
          </div>
        }  
        </div>
      <button id="btn-submit" class="btn btn-success" type="submit"><i class="btn btn-primary d-none"></i> Submit </button>    
    </form>
    
  </div> 
  </div>

 </body> 
</html>

